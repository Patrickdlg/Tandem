#!/usr/bin/env bash

EXPECTED_ARGS=1
E_BADARGS=65

#Check if a file is passed, if not fail

if [ $# -ne $EXPECTED_ARGS ]
then
  echo "Usage: `basename $0` {arg}"
  echo "COMPILATION FAILED"
  exit $E_BADARGS
fi

FILE=$1

#Check if the filename is valid .td

if [[ "$FILE" == *.td ]]
then
  echo "valid filename"
else
     echo "COMPILATION FAILED - invalid filename"
     exit
fi

if [ -f "$FILE" ]
then
    echo the file exists
else
    echo "COMPILATION FAILED - the file does not exist"
    exit
fi

#check java
#check ant 1.8
#check ruby 1.9.2

if type -p java; then
    echo found java executable in PATH
    _java=java
elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
    echo found java executable in JAVA_HOME
    _java="$JAVA_HOME/bin/java"
else
    echo "COMPILATION FAILED - no java"
    exit
fi

if [[ "$_java" ]]; then
    version=$("$_java" -version 2>&1 | awk -F '"' '/version/ {print $2}')
    echo version "$version"
    if [[ "$version" > "1.5" ]]; then
        echo version is more than 1.5
    else
        echo "COMPILATION FAILED - version is less than 1.5"
	exit
    fi
fi



if type -p ant; then
    echo found ant executable in PATH
    _ant=ant
elif [[ -x "usr/bin/env ant" ]];  then
    echo found ant executable in ENV_ANT
    _ant="usr/bin/env ant"
else
    echo "COMPILATION FAILED - no ant"
    exit
fi

if [[ "$_ant" ]]; then
    version=$("$_ant" -v 2>&1 | awk -F ' ' '/ / {print $4}')
    echo version "$version"
    if [[ "$version" > "1.8.0" ]]; then
        echo version is more than 1.8
    else
        echo "COMPILATION FAILED - version is less than 1.8"
	exit
    fi
fi

#Make JRuby use Ruby 1.9

JRUBY_OPTS=--1.9


if type -p ruby; then
    echo found ruby executable in PATH
    _ruby=ruby
elif [[ -x "usr/bin/env ruby" ]];  then
    echo found ant executable in ENV_ANT
    _ruby="usr/bin/env ruby"
else
    echo "COMPILATION FAILED - no ruby"
    exit
fi

use_jruby=0

if [[ "$_ruby" ]]; then
    version=$("$_ruby" -v 2>&1 |grep -e "1\.9\.[2-9]" )
    echo $?
    if [[ "$?" > "0" ]]; then    
    use_jruby=1
    else  	
    echo "good"
    fi
fi

echo "$use_jruby"



echo ANTLR version greater than 3.4 &

ant walk -Dfile="$FILE" -q

ruby_file=${FILE%.*} 

#run a different version of ruby based on ant rubyexec

if [[ "$_use_jruby" > 0 ]]; then
	ant rubyexec -Dfile="$ruby_file" 
	else	
	ruby "$ruby_file".rb
fi



